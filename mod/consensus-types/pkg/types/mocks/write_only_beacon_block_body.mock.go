// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	bytes "github.com/berachain/beacon-kit/mod/primitives/pkg/bytes"
	common "github.com/ethereum/go-ethereum/common"

	eip4844 "github.com/berachain/beacon-kit/mod/primitives/pkg/eip4844"

	mock "github.com/stretchr/testify/mock"

	types "github.com/berachain/beacon-kit/mod/consensus-types/pkg/types"
)

// WriteOnlyBeaconBlockBody is an autogenerated mock type for the WriteOnlyBeaconBlockBody type
type WriteOnlyBeaconBlockBody[ExecutionPayloadT interface{}] struct {
	mock.Mock
}

type WriteOnlyBeaconBlockBody_Expecter[ExecutionPayloadT interface{}] struct {
	mock *mock.Mock
}

func (_m *WriteOnlyBeaconBlockBody[ExecutionPayloadT]) EXPECT() *WriteOnlyBeaconBlockBody_Expecter[ExecutionPayloadT] {
	return &WriteOnlyBeaconBlockBody_Expecter[ExecutionPayloadT]{mock: &_m.Mock}
}

// SetBlobKzgCommitments provides a mock function with given fields: _a0
func (_m *WriteOnlyBeaconBlockBody[ExecutionPayloadT]) SetBlobKzgCommitments(_a0 eip4844.KZGCommitments[common.Hash]) {
	_m.Called(_a0)
}

// WriteOnlyBeaconBlockBody_SetBlobKzgCommitments_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetBlobKzgCommitments'
type WriteOnlyBeaconBlockBody_SetBlobKzgCommitments_Call[ExecutionPayloadT interface{}] struct {
	*mock.Call
}

// SetBlobKzgCommitments is a helper method to define mock.On call
//   - _a0 eip4844.KZGCommitments[common.Hash]
func (_e *WriteOnlyBeaconBlockBody_Expecter[ExecutionPayloadT]) SetBlobKzgCommitments(_a0 interface{}) *WriteOnlyBeaconBlockBody_SetBlobKzgCommitments_Call[ExecutionPayloadT] {
	return &WriteOnlyBeaconBlockBody_SetBlobKzgCommitments_Call[ExecutionPayloadT]{Call: _e.mock.On("SetBlobKzgCommitments", _a0)}
}

func (_c *WriteOnlyBeaconBlockBody_SetBlobKzgCommitments_Call[ExecutionPayloadT]) Run(run func(_a0 eip4844.KZGCommitments[common.Hash])) *WriteOnlyBeaconBlockBody_SetBlobKzgCommitments_Call[ExecutionPayloadT] {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(eip4844.KZGCommitments[common.Hash]))
	})
	return _c
}

func (_c *WriteOnlyBeaconBlockBody_SetBlobKzgCommitments_Call[ExecutionPayloadT]) Return() *WriteOnlyBeaconBlockBody_SetBlobKzgCommitments_Call[ExecutionPayloadT] {
	_c.Call.Return()
	return _c
}

func (_c *WriteOnlyBeaconBlockBody_SetBlobKzgCommitments_Call[ExecutionPayloadT]) RunAndReturn(run func(eip4844.KZGCommitments[common.Hash])) *WriteOnlyBeaconBlockBody_SetBlobKzgCommitments_Call[ExecutionPayloadT] {
	_c.Call.Return(run)
	return _c
}

// SetDeposits provides a mock function with given fields: _a0
func (_m *WriteOnlyBeaconBlockBody[ExecutionPayloadT]) SetDeposits(_a0 []*types.Deposit) {
	_m.Called(_a0)
}

// WriteOnlyBeaconBlockBody_SetDeposits_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetDeposits'
type WriteOnlyBeaconBlockBody_SetDeposits_Call[ExecutionPayloadT interface{}] struct {
	*mock.Call
}

// SetDeposits is a helper method to define mock.On call
//   - _a0 []*types.Deposit
func (_e *WriteOnlyBeaconBlockBody_Expecter[ExecutionPayloadT]) SetDeposits(_a0 interface{}) *WriteOnlyBeaconBlockBody_SetDeposits_Call[ExecutionPayloadT] {
	return &WriteOnlyBeaconBlockBody_SetDeposits_Call[ExecutionPayloadT]{Call: _e.mock.On("SetDeposits", _a0)}
}

func (_c *WriteOnlyBeaconBlockBody_SetDeposits_Call[ExecutionPayloadT]) Run(run func(_a0 []*types.Deposit)) *WriteOnlyBeaconBlockBody_SetDeposits_Call[ExecutionPayloadT] {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]*types.Deposit))
	})
	return _c
}

func (_c *WriteOnlyBeaconBlockBody_SetDeposits_Call[ExecutionPayloadT]) Return() *WriteOnlyBeaconBlockBody_SetDeposits_Call[ExecutionPayloadT] {
	_c.Call.Return()
	return _c
}

func (_c *WriteOnlyBeaconBlockBody_SetDeposits_Call[ExecutionPayloadT]) RunAndReturn(run func([]*types.Deposit)) *WriteOnlyBeaconBlockBody_SetDeposits_Call[ExecutionPayloadT] {
	_c.Call.Return(run)
	return _c
}

// SetEth1Data provides a mock function with given fields: _a0
func (_m *WriteOnlyBeaconBlockBody[ExecutionPayloadT]) SetEth1Data(_a0 *types.Eth1Data) {
	_m.Called(_a0)
}

// WriteOnlyBeaconBlockBody_SetEth1Data_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetEth1Data'
type WriteOnlyBeaconBlockBody_SetEth1Data_Call[ExecutionPayloadT interface{}] struct {
	*mock.Call
}

// SetEth1Data is a helper method to define mock.On call
//   - _a0 *types.Eth1Data
func (_e *WriteOnlyBeaconBlockBody_Expecter[ExecutionPayloadT]) SetEth1Data(_a0 interface{}) *WriteOnlyBeaconBlockBody_SetEth1Data_Call[ExecutionPayloadT] {
	return &WriteOnlyBeaconBlockBody_SetEth1Data_Call[ExecutionPayloadT]{Call: _e.mock.On("SetEth1Data", _a0)}
}

func (_c *WriteOnlyBeaconBlockBody_SetEth1Data_Call[ExecutionPayloadT]) Run(run func(_a0 *types.Eth1Data)) *WriteOnlyBeaconBlockBody_SetEth1Data_Call[ExecutionPayloadT] {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*types.Eth1Data))
	})
	return _c
}

func (_c *WriteOnlyBeaconBlockBody_SetEth1Data_Call[ExecutionPayloadT]) Return() *WriteOnlyBeaconBlockBody_SetEth1Data_Call[ExecutionPayloadT] {
	_c.Call.Return()
	return _c
}

func (_c *WriteOnlyBeaconBlockBody_SetEth1Data_Call[ExecutionPayloadT]) RunAndReturn(run func(*types.Eth1Data)) *WriteOnlyBeaconBlockBody_SetEth1Data_Call[ExecutionPayloadT] {
	_c.Call.Return(run)
	return _c
}

// SetExecutionData provides a mock function with given fields: _a0
func (_m *WriteOnlyBeaconBlockBody[ExecutionPayloadT]) SetExecutionData(_a0 ExecutionPayloadT) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for SetExecutionData")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(ExecutionPayloadT) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WriteOnlyBeaconBlockBody_SetExecutionData_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetExecutionData'
type WriteOnlyBeaconBlockBody_SetExecutionData_Call[ExecutionPayloadT interface{}] struct {
	*mock.Call
}

// SetExecutionData is a helper method to define mock.On call
//   - _a0 ExecutionPayloadT
func (_e *WriteOnlyBeaconBlockBody_Expecter[ExecutionPayloadT]) SetExecutionData(_a0 interface{}) *WriteOnlyBeaconBlockBody_SetExecutionData_Call[ExecutionPayloadT] {
	return &WriteOnlyBeaconBlockBody_SetExecutionData_Call[ExecutionPayloadT]{Call: _e.mock.On("SetExecutionData", _a0)}
}

func (_c *WriteOnlyBeaconBlockBody_SetExecutionData_Call[ExecutionPayloadT]) Run(run func(_a0 ExecutionPayloadT)) *WriteOnlyBeaconBlockBody_SetExecutionData_Call[ExecutionPayloadT] {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(ExecutionPayloadT))
	})
	return _c
}

func (_c *WriteOnlyBeaconBlockBody_SetExecutionData_Call[ExecutionPayloadT]) Return(_a0 error) *WriteOnlyBeaconBlockBody_SetExecutionData_Call[ExecutionPayloadT] {
	_c.Call.Return(_a0)
	return _c
}

func (_c *WriteOnlyBeaconBlockBody_SetExecutionData_Call[ExecutionPayloadT]) RunAndReturn(run func(ExecutionPayloadT) error) *WriteOnlyBeaconBlockBody_SetExecutionData_Call[ExecutionPayloadT] {
	_c.Call.Return(run)
	return _c
}

// SetRandaoReveal provides a mock function with given fields: _a0
func (_m *WriteOnlyBeaconBlockBody[ExecutionPayloadT]) SetRandaoReveal(_a0 bytes.B96) {
	_m.Called(_a0)
}

// WriteOnlyBeaconBlockBody_SetRandaoReveal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetRandaoReveal'
type WriteOnlyBeaconBlockBody_SetRandaoReveal_Call[ExecutionPayloadT interface{}] struct {
	*mock.Call
}

// SetRandaoReveal is a helper method to define mock.On call
//   - _a0 bytes.B96
func (_e *WriteOnlyBeaconBlockBody_Expecter[ExecutionPayloadT]) SetRandaoReveal(_a0 interface{}) *WriteOnlyBeaconBlockBody_SetRandaoReveal_Call[ExecutionPayloadT] {
	return &WriteOnlyBeaconBlockBody_SetRandaoReveal_Call[ExecutionPayloadT]{Call: _e.mock.On("SetRandaoReveal", _a0)}
}

func (_c *WriteOnlyBeaconBlockBody_SetRandaoReveal_Call[ExecutionPayloadT]) Run(run func(_a0 bytes.B96)) *WriteOnlyBeaconBlockBody_SetRandaoReveal_Call[ExecutionPayloadT] {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(bytes.B96))
	})
	return _c
}

func (_c *WriteOnlyBeaconBlockBody_SetRandaoReveal_Call[ExecutionPayloadT]) Return() *WriteOnlyBeaconBlockBody_SetRandaoReveal_Call[ExecutionPayloadT] {
	_c.Call.Return()
	return _c
}

func (_c *WriteOnlyBeaconBlockBody_SetRandaoReveal_Call[ExecutionPayloadT]) RunAndReturn(run func(bytes.B96)) *WriteOnlyBeaconBlockBody_SetRandaoReveal_Call[ExecutionPayloadT] {
	_c.Call.Return(run)
	return _c
}

// NewWriteOnlyBeaconBlockBody creates a new instance of WriteOnlyBeaconBlockBody. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWriteOnlyBeaconBlockBody[ExecutionPayloadT interface{}](t interface {
	mock.TestingT
	Cleanup(func())
}) *WriteOnlyBeaconBlockBody[ExecutionPayloadT] {
	mock := &WriteOnlyBeaconBlockBody[ExecutionPayloadT]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
